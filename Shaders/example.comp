#version 460

#extension GL_GOOGLE_include_directive : enable

#include"../vulkano/Backend/Headers/vul_host_device.hpp"
#include"allCommon.glsl"

layout(set = 0, binding = 2) buffer MaterialBuffer{PackedMaterial m[];} matBuf;

float randomValue(inout uint state)
{
    state = state * 747796405 + 2891336453;
    uint result = ((state >> ((state >> 28) + 4)) ^ state) * 277803737;
    result = (result >> 22) ^ result;
    return result / 4294967295.0;
}

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

void main()
{
    uint index = gl_GlobalInvocationID.x;
    if (index > matBuf.m.length()) return;

    uint state = matBuf.m[index].padding * index;
    float r = randomValue(state);
    float g = randomValue(state);
    float b = randomValue(state);
    matBuf.m[index].padding = int(state);

    matBuf.m[index].colorFactor.x = r;
    matBuf.m[index].colorFactor.y = g;
    matBuf.m[index].colorFactor.z = b;
}
